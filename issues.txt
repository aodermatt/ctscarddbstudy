Issues and To Do List
---------------------

[x] test options - using -help <options> 

===
[x] Database::is_db_empty() get working ??  does db have data? 
[x] C/C++ API initdb call from program or shell out.
[] gen-db makefile - test -d <dbfolder> || <path>/rdm-initialize testdb

-- call/verify count of db records - find API and insert code. 
-- is db empty is more inline with call. 

[x] install new db version ... and extract version string during test. 
    [x] test change decl dtor order in rdm14-db.hpp - FIXED.
    [x] 2nd run after populate doesn't coredump. Note disabling the thread
        generates an exception - otherwise no core dump as unhandled exception
	occurs with the reader thread. #ifdef READER_THREAD is there to remove
	it and get a core dump.
	new Raima RDM14 version - FIXED.

[x] fix why crash if not populate first ... why an exception? 
[x] add initdb makefile rule for rdm14 and then others 

[x] add a 'make run' to the plugin makefiles for given prod and target

[x] doesn't look right 
Stats post run: 
	requested rec count = 20000000
	requested trans grp sz = 100000
	inserts population = 20000000
	* pop rec count = 0
	creates = 66667
	deletes = 66667
	updates = 66666
	reads = 238387
	* missed_reads = 0
	* diff_t = 0
	* write_diff_t = 0
	* read_diff_t = 0

all marked with * are suspicious - FIXED.

-----------

[X] RENAME: 
Sample point instead of markers
import sim is update list -keeping image-impsim.csv as filename reflecting
void Database::Profiler::update_list_sim();

FUTURE: 
Recommending an erlang distribution or queue where reader thread waits
at least 1 second or so between users using it so reads separate by 1 sec or less. 

see serial tester - Opts<StructT> code to normnalize 
	options that are binary or unary.

[X] code changes
	const unsigned m = impl_->stats_.requested_rec_count;
	unsigned n = impl_->stats_.requested_trans_grp_sz;

	can be auto ... 

	const auto  m = impl_->stats_.requested_rec_count;
	auto n = impl_->stats_.requested_trans_grp_sz;

[ adopt switch statement ] 
support sorted vs unsorted or file vs non-file for illustration purposes.

use switch/case vs if on state machine to clean up the code.
scoped enum ...

-------------------------------------------------------------------------------
The older rdm14 had 2 problems:
1.) the dtor issue with the impl
2.) When running the program a second time and seeing that the db was already
populated - the update list sim is invoked and the pop is skipped as one would
expect.
It seems to work now w/ the latest rdm14 distribution from ftp.raima.com

--------------------------------------------------------------------------------

Process for core dump processing backtrace shared with Raima support

coredump:
cubic@ubuntu:[~/cubic/deploy] $ ls -la core
-rw------- 1 cubic cubic 9183232 Nov 21 21:18 core
cubic@ubuntu:[~/cubic/deploy] $ gdb ./main-rdm14-linux-benchmark 
GNU gdb (Ubuntu 7.11.1-0ubuntu1~16.04) 7.11.1
Copyright (C) 2016 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.  Type "show copying"
and "show warranty" for details.
This GDB was configured as "i686-linux-gnu".
Type "show configuration" for configuration details.
For bug reporting instructions, please see:
<http://www.gnu.org/software/gdb/bugs/>.
Find the GDB manual and other documentation resources online at:
<http://www.gnu.org/software/gdb/documentation/>.
For help, type "help".
Type "apropos word" to search for commands related to "word"...
Reading symbols from ./main-rdm14-linux-benchmark...done.
(gdb) corefile core
Undefined command: "corefile".  Try "help".
(gdb) core-file core
warning: core file may not match specified executable file.
[New LWP 21745]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/i386-linux-gnu/libthread_db.so.1".
Core was generated by `./main-rdm14-linux-benchmark markers.txt -s 10000'.
Program terminated with signal SIGSEGV, Segmentation fault.
#0  b_llDeleteHead (ll=0xb7143578) at ../../../target/lnx-x86_32/../../source/base/ll.c:379
379	../../../target/lnx-x86_32/../../source/base/ll.c: No such file or directory.
(gdb) backtrace
#0  b_llDeleteHead (ll=0xb7143578) at ../../../target/lnx-x86_32/../../source/base/ll.c:379
#1  0xb72eaba8 in b_llDestroy (ll=0xb7143578) at ../../../target/lnx-x86_32/../../source/base/ll.c:73
#2  0xb7719c02 in RDM_CPP::IDb::~IDb (this=0x8c1ea38, __in_chrg=<optimized out>)
    at ../../../target/lnx-x86_32/../../source/cppapi/idb.cpp:468
#3  0xb771fa56 in RDM_CPP::IDb::Release (this=0x8c1ea38)
    at ../../../target/lnx-x86_32/../../source/cppapi/idb.h:76
#4  RDM_CPP::Db::~Db (this=0x8c1eb68, __in_chrg=<optimized out>)
    at ../../../target/lnx-x86_32/../../source/cppapi/db.cpp:324
#5  0x0804ebdb in Database::RDM_ProfilerImpl::~RDM_ProfilerImpl (this=0x8c1eb28, 
    __in_chrg=<optimized out>) at ../rdm14/rdm-db.cpp:24
#6  0x0804ec3e in Database::RDM_ProfilerImpl::~RDM_ProfilerImpl (this=0x8c1eb28, 
    __in_chrg=<optimized out>) at ../rdm14/rdm-db.cpp:27
#7  0x0804ade9 in Database::Profiler::~Profiler (this=0xbf96c3c0, __in_chrg=<optimized out>)
    at ../dbcmn/database_profiler.cpp:118
#8  0x0804a9bd in main (argc=4, argv=0xbf96c4f4) at ../dbcmn/main-db-metrics.cpp:16
(gdb) 


#if 0 
// this ordering core dumps in reverse order - so c_find_ deleted last
    RDM_CPP::Cursor_card_info c_find_, c_update_, c_delete_;
    RDM_CPP::Db_cardsdb w_cards_db_, r_cards_db_;
    RDM_CPP::TFS tfs;
#else
    // tfs deleted last.
//    RDM_CPP::TFS tfs;
//    RDM_CPP::Cursor_card_info c_find_, c_update_, c_delete_;
//    RDM_CPP::Db_cardsdb w_cards_db_, r_cards_db_;

    RDM_CPP::Db_cardsdb w_cards_db_, r_cards_db_;
    RDM_CPP::TFS tfs;
    RDM_CPP::Cursor_card_info c_find_, c_update_, c_delete_;

#endif
};

private:
    // order is significant in destructor sequence only with respect to TFS
    // it evidently must be the last object as dtor reverses order from bottom
    // to top
    RDM_CPP::TFS tfs;
    RDM_CPP::Db_cardsdb w_cards_db_, r_cards_db_;
    RDM_CPP::Cursor_card_info c_find_, c_update_, c_delete_;
};

[] Create a set of types based on traits<T> using the database API as a generic
layer. It looks like this is not going to be readily possible although a 
class that encapsulates the cursor will help.

To install raima rdm 14 go to a directory where you want the installer to
ftp get into.

Site: ftp.raima.com
User: cubic
Password: Yppk#$$3

at prompt:
binary
cd RDM14
get rdm_enterprise-obj-lnx-x86_32-14.0.1.7027.run.sh	- linux 32
get rdm_enterprise-obj-lnx-x86_32--lnx-arm-gnueabihf--14.0.1.7027.run.sh  - PI 3

will download the installer into the current working directory
$ chmod +x rdm_enterprise-obj-lnx-x86_32-14.0.1.7027.run.sh
is necessary to run it.
-rwxrwxr-x 1 cubic cubic  7870147 Nov 24 03:00 rdm_enterprise-obj-lnx-x86_32-14.0.1.7027.run.sh

$ ./rdm_enterprise-obj-lnx-x86_32-14.0.1.7027.run.sh
when asked for an install directory issue: 
/opt/raima-x86

export LD_LIBRARY_PATH=/opt/raima-x86/rdm_enterprise-14.0/lib
will be necessary since rpath was used for build to locate /opt/Raima dll's
However using raima-arm also makes it more difficult. 

repeat this process for the Pi 3 installer: rdm_enterprise-obj-lnx-x86_32--lnx-arm-gnueabihf--14.0.1.7027.run.sh

Installing the compiler: 
f you are using Ubuntu 16.04 as host install arm-linux-gnueabihf-gcc and arm-linux-gnueabihf-g++ using
$ sudo apt-get install gcc-arm-linux-gnueabi
$ sudo apt-get install g++-arm-linux-gnueabi

Installing sqlite3
$ sudo apt-get install sqlite		-- installs the .so library
$ sudo apt-get install sqlite-dev    	-- gets the .h install and lib for development.
you may need the -f option.
$ sudo apt-get -f install sqlite
$ sudo apt-get -f install sqlite-dev








